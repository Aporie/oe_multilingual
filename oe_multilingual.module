<?php

/**
 * @file
 * Multilingual module.
 */

declare(strict_types = 1);

use Drupal\Core\TypedData\TranslatableInterface;
use Drupal\Core\Url;

/**
 * Implements hook_language_switch_links_alter().
 *
 * Replaces the language links labels with the native language version.
 */
function oe_multilingual_language_switch_links_alter(array &$links, string $type, Url $url): void {
  $original_languages = \Drupal::service('oe_multilingual.helper')->getLanguageNameList();
  foreach ($links as $code => &$link) {
    if (isset($original_languages[$code])) {
      $link['title'] = $original_languages[$code];
    }
  }
}

/**
 * Implements hook_language_fallback_candidates_alter().
 *
 * - Disable default language fallback logic: the default Drupal behavior
 * will return all available languages and then choose the first one
 * ordered alphabetically.
 * - Return the entity's original language as the default fallback language.
 */
function oe_multilingual_language_fallback_candidates_alter(array &$candidates, array $context): void {
  $operation = $context['operation'];

  // The default fallback language for any entity is the language it was
  // originally written on.
  if ($operation === 'entity_upcast' || $operation === 'entity_view') {
    $attempted_langcode = $context['langcode'];
    if ($context['data'] instanceof TranslatableInterface) {
      $candidates = [$attempted_langcode => $attempted_langcode];
      $entity = $context['data'];
      $default_language = $entity->getUntranslated()->language()->getId();
      $candidates[$default_language] = $default_language;
    }
  }
}

/**
 * Implements hook_preprocess_language_selection_page_content().
 *
 * Replaces the language links labels with the native language version.
 */
function oe_multilingual_preprocess_language_selection_page_content(&$variables): void {
  $original_languages = \Drupal::service('oe_multilingual.helper')->getLanguageNameList();
  foreach ($variables['language_links']['#items'] as $langcode => &$item) {
    if (isset($original_languages[$langcode])) {
      $item['#title'] = $original_languages[$langcode];
    }
  }
}
